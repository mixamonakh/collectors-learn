Тема 3 урок 1:
3.00 - объект в js это ассоциативный массив
10.00 - поле и свойство объекта. Метод объекта.
15.30 - this
21.00 - ООП

Тема 3 урок 2:
1.10 - оператор new
7.00 - функция конструктор ( родительская функция )

Тема 3 урок 3:
06.00 - приватные поля
11.00 - приватные поля пример
22.00 - инкапсуляция
27.00 - наследование
35.00 - наследование разбор
38.00 - полиморфизм

Тема 3 урок 4: наследование proto
3.30 - принцип работы наследования через proto
12.00 - пример наследования через proto
17.30 - proto в функциях конструкторе
22.00 - ключ call у функции
24.00 - подмена контекста через call

Тема 3 урок 5: prototype es6
09.00 - prototype в функции конструкторе
12.00 - дописываем ключ через объект
13.00 - дописываем ключ напрямую через prototype
19.30 - наследование методов через prototype для избежания дублей функций
35.00 - еще раз про call
39.00 - еще раз про вынос метода через prototype и то что он наследуется только в одну функцию конструктор
42.00 - Object.create()
45.00 - наследование через Object.create() во все функции конструкторы
55.00 - дописываем constructor в ручную
57.00 - пример полиморфизма ( проверить, перезапись ли !!! ? )
01.03.00 - es6

Тема 3 урок 6: Контекст вызова this
01.00 - use strict - строгий режим
07.00 - потеря контекста this при записи ссылки на функции в переменную и вызов ее через переменную
13.00 - передача метода в другой объект

Тема 3 урок 7:Подмена контекста call / apply
23.00 - call
42.00 - apple

Тема 3 урок 8:Сохранение контекста. bind, карринг функции
17.00 - сохранение контекста, метод bind()
44.00 - bind() для привяызки параметров

Тема 3. Часть 9. Работа с объектом Object и Object.prototype
05.00 - Object.keys( obj ) получить ключи из объекта
09.00 - Object.assign( {}, obj ) копировать объект
18.00 - Object.create( obj )  передать объект для наследования от него
21.00 - Object.freeze( obj ) запретить изменение и добавление в объект
33.00 - toString valueOf для приведение типов
41.00 - obj.hasOwnProperty - проверить наличие ключа в объекте
45.00 - obj.isPrototypeOf( obj) проверяет является ли объект прототипом объекта

Тема 3. Часть 10. Сравнение объектов. Неявное прео…бъекту. defineProperties и дескрипторы объекта.mp4
05.00 - сравнение объектов
08.00, 10.00 - неявное преобразование к объекту
23.00 - Object.defineProperty( obj, 'name key', descriptor ) добавление ключа в объект

Тема 3. Часть 11. Геттеры и сеттеры - 1 часть
08.00 - getter
10.00 - setter
Тема 3. Часть 11. Геттеры и сеттеры - 2 часть
13.30 - еще один способ задавать геттер и сеттер
17.00 - геттер и сеттер внутри класса